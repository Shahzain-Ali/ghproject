import { NextIntlClientProvider } from 'next-intl';
import type { Metadata } from "next";
import localFont from "next/font/local";
import { Josefin_Sans } from "next/font/google";
import { cookies } from 'next/headers';
import "./globals.css";
import MainLayout from "./MainLayout";
import { ClerkProvider } from '@clerk/nextjs';

const josefin_Sans = Josefin_Sans({ weight: '400', subsets: ["latin"] }); 

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});

const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

async function getMessages(locale: string) {
  try {
    return (await import(`../../messages/${locale}.json`)).default;
  } catch (error) {
    console.error("Error loading translations:", error);
    return (await import(`../../messages/en.json`)).default;
  }
}

export default async function RootLayout({ children }: { children: React.ReactNode }) {
  const cookieStore = cookies();
  // Read the cookie instead of forcing 'en'
  const locale = (await cookieStore).get('NEXT_LOCALE')?.value || 'en';
  const messages = await getMessages(locale);

  return (
    <ClerkProvider>
      <NextIntlClientProvider locale={locale} messages={messages}>
        <html lang={locale}>
          <body className={`
            ${geistSans.variable} 
            ${geistMono.variable} 
            ${josefin_Sans.className} 
            antialiased
          `}>
            <MainLayout>
              {children}
            </MainLayout>
          </body>
        </html>
      </NextIntlClientProvider>
    </ClerkProvider>
  );
}